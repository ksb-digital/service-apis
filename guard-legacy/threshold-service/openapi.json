{
    "components": {
        "examples": {},
        "headers": {},
        "parameters": {},
        "requestBodies": {},
        "responses": {},
        "schemas": {
            "Uuid": {
                "type": "string"
            },
            "ValueOftypeofThresholdType": {
                "type": "string",
                "enum": [
                    "MAX",
                    "MIN"
                ]
            },
            "PickThresholdV2pumpIdorfailureTypeorfailureLevelorvalueorunitorthresholdType": {
                "properties": {
                    "pumpId": {
                        "$ref": "#/components/schemas/Uuid"
                    },
                    "failureType": {
                        "type": "string",
                        "enum": [
                            "BATTERYSTATE",
                            "BATTERYVOLTAGE",
                            "BATTERYSTATE_CYCLESCOUNT",
                            "BEARING_TEMPERATURE_1",
                            "BEARING_TEMPERATURE_2",
                            "CYCLES",
                            "LEAKAGE_1",
                            "LEAKAGE_2",
                            "MOTOR_TEMPERATURE",
                            "NODATA",
                            "OPERATINGHOURS_1STBEARINGLUBRICATION",
                            "OPERATINGHOURS_BEARING",
                            "OPERATINGHOURS_BEARINGLUBRICATION",
                            "OPERATINGHOURS_PUMP",
                            "OVERVOLTAGE",
                            "PHASE_ASYMMETRY",
                            "PHASE_FAILURE",
                            "TEMPERATUREHIGH",
                            "TEMPERATURELOW",
                            "UNDERVOLTAGE",
                            "VIBRATION"
                        ],
                        "nullable": false
                    },
                    "failureLevel": {
                        "type": "string",
                        "enum": [
                            "FAILURELEVEL_ALARM",
                            "FAILURELEVEL_WARN",
                            "FAILURELEVEL_NORM"
                        ],
                        "nullable": false
                    },
                    "value": {
                        "type": "number",
                        "format": "double"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "thresholdType": {
                        "$ref": "#/components/schemas/ValueOftypeofThresholdType"
                    }
                },
                "required": [
                    "pumpId",
                    "failureType",
                    "failureLevel",
                    "value",
                    "unit",
                    "thresholdType"
                ],
                "type": "object",
                "description": "From T, pick a set of properties whose keys are in the union K"
            },
            "CreateUserThresholdBody": {
                "$ref": "#/components/schemas/PickThresholdV2pumpIdorfailureTypeorfailureLevelorvalueorunitorthresholdType"
            },
            "UnitSystemKeys": {
                "type": "string",
                "enum": [
                    "metric",
                    "imperial"
                ]
            },
            "Paging": {
                "properties": {
                    "self": {
                        "type": "string",
                        "description": "The current page URI",
                        "example": "https://qa.api.ksbguard.net/devicedata?pumpId=44a3d63d-aa72-4125-b426-7e022b38c927&limit=1000&offset=1000"
                    },
                    "next": {
                        "type": "string",
                        "description": "The next page URI",
                        "example": "https://qa.api.ksbguard.net/devicedata?pumpId=44a3d63d-aa72-4125-b426-7e022b38c927&limit=1000&offset=2000"
                    },
                    "prev": {
                        "type": "string",
                        "description": "The previous page URI",
                        "example": "https://qa.api.ksbguard.net/devicedata?pumpId=44a3d63d-aa72-4125-b426-7e022b38c927&limit=1000&offset=0"
                    }
                },
                "required": [
                    "self"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "DateTime": {
                "type": "string"
            },
            "ValueOftypeofThresholdOwnerType": {
                "type": "string",
                "enum": [
                    "SYSTEM",
                    "USER"
                ]
            },
            "ValueOftypeofThresholdStatus": {
                "type": "string",
                "enum": [
                    "ACTIVE",
                    "INACTIVE"
                ]
            },
            "Threshold": {
                "properties": {
                    "thresholdId": {
                        "$ref": "#/components/schemas/Uuid"
                    },
                    "pumpId": {
                        "$ref": "#/components/schemas/Uuid"
                    },
                    "validFrom": {
                        "$ref": "#/components/schemas/DateTime"
                    },
                    "value": {
                        "type": "number",
                        "format": "double"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "failureType": {
                        "type": "string",
                        "enum": [
                            "BATTERYSTATE",
                            "BATTERYVOLTAGE",
                            "BATTERYSTATE_CYCLESCOUNT",
                            "BEARING_TEMPERATURE_1",
                            "BEARING_TEMPERATURE_2",
                            "CYCLES",
                            "LEAKAGE_1",
                            "LEAKAGE_2",
                            "MOTOR_TEMPERATURE",
                            "NODATA",
                            "OPERATINGHOURS_1STBEARINGLUBRICATION",
                            "OPERATINGHOURS_BEARING",
                            "OPERATINGHOURS_BEARINGLUBRICATION",
                            "OPERATINGHOURS_PUMP",
                            "OVERVOLTAGE",
                            "PHASE_ASYMMETRY",
                            "PHASE_FAILURE",
                            "TEMPERATUREHIGH",
                            "TEMPERATURELOW",
                            "UNDERVOLTAGE",
                            "VIBRATION"
                        ],
                        "nullable": false
                    },
                    "failureLevel": {
                        "type": "string",
                        "enum": [
                            "FAILURELEVEL_ALARM",
                            "FAILURELEVEL_WARN",
                            "FAILURELEVEL_NORM"
                        ],
                        "nullable": false
                    },
                    "type": {
                        "$ref": "#/components/schemas/ValueOftypeofThresholdOwnerType"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ValueOftypeofThresholdStatus"
                    },
                    "thresholdType": {
                        "$ref": "#/components/schemas/ValueOftypeofThresholdType"
                    },
                    "external": {
                        "type": "boolean"
                    },
                    "autoFeedback": {
                        "type": "boolean"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/DateTime"
                    }
                },
                "required": [
                    "thresholdId",
                    "pumpId",
                    "validFrom",
                    "value",
                    "unit",
                    "failureType",
                    "failureLevel",
                    "type",
                    "status",
                    "thresholdType",
                    "external",
                    "autoFeedback",
                    "createdBy",
                    "createdAt"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "ThresholdV2": {
                "$ref": "#/components/schemas/Threshold"
            },
            "GetThresholdPagedResponse": {
                "properties": {
                    "paging": {
                        "$ref": "#/components/schemas/Paging"
                    },
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/ThresholdV2"
                        },
                        "type": "array",
                        "description": "List of items returned by the search query at the current page"
                    }
                },
                "required": [
                    "paging",
                    "data"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "UnitSystem": {
                "enum": [
                    "metric",
                    "imperial"
                ],
                "type": "string"
            },
            "GetLatestThresholdResponse": {
                "properties": {
                    "paging": {
                        "$ref": "#/components/schemas/Paging"
                    },
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/ThresholdV2"
                        },
                        "type": "array",
                        "description": "List of items returned by the search query at the current page"
                    }
                },
                "required": [
                    "paging",
                    "data"
                ],
                "type": "object",
                "additionalProperties": false
            }
        },
        "securitySchemes": {
            "KsbUserPool": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header",
                "x-amazon-apigateway-authtype": "cognito_user_pools",
                "x-amazon-apigateway-authorizer": {
                    "type": "cognito_user_pools",
                    "providerARNs": [
                        {
                            "Fn::Sub": "${KsbUserPoolArn}"
                        }
                    ]
                }
            }
        }
    },
    "info": {
        "title": "threshold-service",
        "version": "0.0.0-dev",
        "description": "Threshold V2 API",
        "license": {
            "name": "UNLICENSED"
        },
        "contact": {}
    },
    "openapi": "3.0.0",
    "paths": {
        "/thresholds": {
            "post": {
                "operationId": "createThresholdV2",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No content"
                    }
                },
                "description": "Creates a new threshold",
                "security": [
                    {
                        "KsbUserPool": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "unitSystem",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/UnitSystemKeys"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserThresholdBody"
                            }
                        }
                    }
                },
                "x-amazon-apigateway-integration": {
                    "uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "CreateThresholdV2Function",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    },
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                }
            },
            "get": {
                "operationId": "getThresholdsV2ForPump",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetThresholdPagedResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Get the thresholds for pumpId",
                "security": [
                    {
                        "KsbUserPool": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "pumpId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "failureType",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BATTERYSTATE",
                                "BATTERYVOLTAGE",
                                "BATTERYSTATE_CYCLESCOUNT",
                                "BEARING_TEMPERATURE_1",
                                "BEARING_TEMPERATURE_2",
                                "CYCLES",
                                "LEAKAGE_1",
                                "LEAKAGE_2",
                                "MOTOR_TEMPERATURE",
                                "NODATA",
                                "OPERATINGHOURS_1STBEARINGLUBRICATION",
                                "OPERATINGHOURS_BEARING",
                                "OPERATINGHOURS_BEARINGLUBRICATION",
                                "OPERATINGHOURS_PUMP",
                                "OVERVOLTAGE",
                                "PHASE_ASYMMETRY",
                                "PHASE_FAILURE",
                                "TEMPERATUREHIGH",
                                "TEMPERATURELOW",
                                "UNDERVOLTAGE",
                                "VIBRATION"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "failureLevel",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FAILURELEVEL_ALARM",
                                "FAILURELEVEL_WARN",
                                "FAILURELEVEL_NORM"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SYSTEM",
                                "USER"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ACTIVE",
                                "INACTIVE"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "validFrom",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "validUntil",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "unitSystem",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/UnitSystem"
                        }
                    },
                    {
                        "in": "query",
                        "name": "external",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetThresholdsV2Function",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    },
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                }
            },
            "options": {
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Default response for CORS method",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {}
                    }
                },
                "x-amazon-apigateway-integration": {
                    "type": "mock",
                    "requestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                        "default": {
                            "statusCode": 200,
                            "responseParameters": {
                                "method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Origin": {
                                    "Fn::Sub": "'${AllowedOrigin}'"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/thresholds/latest": {
            "get": {
                "operationId": "getLatestThresholdsV2ForPump",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetThresholdPagedResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Get the latest thresholds for pumpId",
                "security": [
                    {
                        "KsbUserPool": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "pumpId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "default": "ACTIVE",
                            "type": "string",
                            "enum": [
                                "ACTIVE",
                                "INACTIVE"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "unitSystem",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/UnitSystem"
                        }
                    },
                    {
                        "in": "query",
                        "name": "external",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "x-amazon-apigateway-integration": {
                    "uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "GetLatestThresholdsV2Function",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    },
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                }
            },
            "options": {
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Default response for CORS method",
                        "headers": {
                            "Access-Control-Allow-Origin": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Methods": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "Access-Control-Allow-Headers": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {}
                    }
                },
                "x-amazon-apigateway-integration": {
                    "type": "mock",
                    "requestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                        "default": {
                            "statusCode": 200,
                            "responseParameters": {
                                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Origin": {
                                    "Fn::Sub": "'${AllowedOrigin}'"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://api.ksbguard.net/thresholds/v2/"
        }
    ],
    "x-amazon-apigateway-request-validators": {
        "all": {
            "validateRequestBody": true,
            "validateRequestParameters": true
        },
        "params-only": {
            "validateRequestBody": false,
            "validateRequestParameters": true
        }
    },
    "x-amazon-apigateway-gateway-responses": {
        "DEFAULT_4XX": {
            "responseParameters": {
                "gatewayresponse.header.Access-Control-Allow-Origin": {
                    "Fn::Sub": "'${AllowedOrigin}'"
                }
            }
        },
        "DEFAULT_5XX": {
            "responseParameters": {
                "gatewayresponse.header.Access-Control-Allow-Origin": {
                    "Fn::Sub": "'${AllowedOrigin}'"
                }
            }
        }
    },
    "x-amazon-apigateway-request-validator": "params-only"
}